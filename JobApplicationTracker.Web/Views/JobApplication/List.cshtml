@model List<JobApplicationListViewModel>

@{
    ViewData["Title"] = "Application list";
}

<div class="application-div">
    @if (Model is not null)
    {
        @if (TempData.ContainsKey("SuccessMessage") && TempData["SuccessMessage"] != null)
        {
            <div class="success-flush-message">
                @TempData["SuccessMessage"]
            </div>
        }
        <table class="application-list-table">
            <tr>
                <th>Company name</th>
                <th>Position</th>
                <th>Status</th>
                <th>Apply Date</th>
                <th></th>
            </tr>
            @if (!Model.Any())
            {
                <tr>
                    <td colspan="5">No job applications available.</td>
                </tr>
            }
            else
            {
                @foreach (JobApplicationListViewModel item in Model)
                {
                    <tr>
                        <td>@item.CompanyName</td>
                        <td>@item.Position</td>
                        <td>@item.Status</td>
                        <td>@item.AppliedAt</td>
                        <td>
                            <a asp-action="Detail" asp-controller="JobApplication" asp-route-id="@item.Id">View</a>

                            <form asp-action="Remove" asp-controller="JobApplication" asp-route-id="@item.Id" method="post">
                                <input type="submit" name="Remove" value="Remove" />
                            </form>

                        </td>
                    </tr>
                }
            }
        </table>

        // pagination
        <div>
            @{
                int.TryParse(Context.Request.Query["offset"], out int currentOffset);
                int.TryParse(Context.Request.Query["limit"], out int currentLimit);
                currentLimit = currentLimit > 0 ? currentLimit : 10;
                int previousOffset = currentOffset > currentLimit ? currentOffset - currentLimit : 0;
                int totalItemCount = ViewBag.TotalItemCount;
            }

            @if (currentOffset > 0)
            {
                <a href="@Url.Link("item-list", new { limit = currentLimit, offset = previousOffset })">&larr;Previous</a>
            }

            @if (currentLimit + currentOffset < totalItemCount)
            {
                <a href="@Url.Link("item-list", new { limit = currentLimit, offset = currentOffset + currentLimit })">Next&rarr;</a>
            }
        </div>
    }
    else
    {
        <div asp-validation-summary="ModelOnly"></div>
    }
</div>
